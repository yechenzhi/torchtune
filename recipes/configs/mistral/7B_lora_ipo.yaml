# Config for single device LoRA DPO alignment in lora_dpo_single_device.py
# using a Llama2 7B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Llama-2-7b-hf --output-dir /tmp/Llama-2-7b-hf --hf-token <HF_TOKEN>
#
# To launch on a single device, run the following command from root:
#   tune run lora_dpo_single_device --config llama2/7B_lora_dpo_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run lora_dpo_single_device --config llama2/7B_lora_dpo_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.

# Model Arguments
model:
  _component_: torchtune.models.mistral.lora_mistral_7b
  lora_attn_modules: ['q_proj', 'v_proj', 'k_proj']
  apply_lora_to_mlp: True
  apply_lora_to_output: True
  lora_rank: 64
  lora_alpha: 16

# Tokenizer
tokenizer:
  _component_: torchtune.models.mistral.mistral_tokenizer
  path:  /tmp/Mistral-7B-v0.1/tokenizer.model

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: /tmp/Mistral-7B-v0.1/sft_uf
  checkpoint_files: [
    hf_model_0001_2.pt,
    hf_model_0002_2.pt 
  ]
  recipe_checkpoint: null
  output_dir: /tmp/Mistral-7B-v0.1/sft_ipo_uf
  model_type: MISTRAL
resume_from_checkpoint: False

# Dataset and Sampler
dataset:
  _component_: torchtune.datasets.ultrafeedback_cleaned_dataset
  max_seq_len: 4096
seed: null
shuffle: True
batch_size: 2

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  lr: 2e-5
lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torchtune.modules.loss.DPOLoss
  beta: 0.1
  label_smoothing: 0
  loss_type: ipo

# Training
epochs: 3
max_steps_per_epoch: null
gradient_accumulation_steps: 8
compile: False

# Logging
output_dir: /tmp/Mistral-7B-v0.1/lora_sft_ipo_output_uf/
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
log_every_n_steps: 1

# Environment
device: cuda
dtype: bf16
enable_activation_checkpointing: True
